[gd_resource type="ShaderMaterial" load_steps=3 format=3 uid="uid://br4usdh1tvsfh"]

[ext_resource type="Texture2D" uid="uid://d3r030owxoeni" path="res://ground/Fresh_Windswept_Snow_ugspafgdy_2K_Normal.jpg" id="2_0oile"]

[sub_resource type="Shader" id="Shader_msovf"]
resource_local_to_scene = true
code = "shader_type spatial;

uniform vec4 _color: source_color;
uniform vec2 _tile = vec2(1.0, 1.0);
uniform vec2 _offset = vec2(0.0, 0.0);

// NOTE: for later
// instance uniform bool _show_impact = false;
uniform sampler2D _impact_map: hint_default_black;

uniform sampler2D _normalmap: hint_normal;

uniform sampler2D _displacement_map: hint_default_black;
uniform float _displacement_intensity: hint_range(0, 1.0) = 0.1;
uniform float _displacement_scale: hint_range(0, 6.0) = 0.1;

varying vec2 transformedUV;

void vertex() {
	transformedUV = UV * _tile + _offset;
	float displacement = texture(_impact_map, transformedUV * _displacement_scale).x;
	VERTEX = VERTEX + vec3(0.0, displacement, 0.0);
}

float invLerp(float a, float b, float v) {
	return (v - a) / (b - a);
}

void fragment() {
	ALBEDO = _color.rgb;
	vec4 black = vec4(0.0, 0.0, 0.0, 1.0);
	//ALBEDO = texture(_normalmap, tex_position).xyz;
	//ALBEDO = vec3(UV, 0.0);


	NORMAL_MAP = texture(_normalmap, transformedUV).xyz;
}
"

[resource]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_msovf")
shader_parameter/_color = Color(0.693015, 0.693015, 0.693015, 1)
shader_parameter/_tile = Vector2(1, 1)
shader_parameter/_offset = Vector2(0, 0)
shader_parameter/_normalmap = ExtResource("2_0oile")
shader_parameter/_displacement_intensity = 0.644
shader_parameter/_displacement_scale = 3.325
